import ProductsCard from "@/components/ProductsCard";
import ProjectsGallery from "@/components/ProjectsGallery";
import TeamCard from "@/components/TeamCard";
import { ProductsProps, ProjectsDataProps, TeamDataProps } from "@/interface";
import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";

interface Props {
  dataProducts: ProductsProps[];
  projects: ProjectsDataProps[];
  team: TeamDataProps[];
}

const Search: NextPage<Props> = ({ dataProducts, projects, team }) => {
  const hasResults =
    dataProducts.length > 0 || projects.length > 0 || team.length > 0;

  return (
    <>
      <Head>
        <title>Page - Search</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="search-page" id="saturation-content">
        <div className="search-page-wrapper">
          {hasResults ? (
            <>
              <div className="projects-searched-inner">
                {projects.map((project) => (
                  <ProjectsGallery key={project.id} {...project} />
                ))}
              </div>

              <div className="products-inner">
                {dataProducts.map((product) => (
                  <ProductsCard key={product.id} {...product} />
                ))}
              </div>

              <div className="team-inner">
                {team.map((member) => (
                  <TeamCard key={member.id} {...member} />
                ))}
              </div>
            </>
          ) : (
            <p className="description-result">
              There are no results with your search!
            </p>
          )}
        </div>
      </div>
    </>
  );
};

export default Search;

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const { search } = query;

  const productRes = await fetch(`http://localhost:5001/products?q=${search}`);
  const dataProducts: ProductsProps[] = await productRes.json();

  const projectRes = await fetch(
    `http://localhost:5001/projectsData?q=${search}`
  );
  const projects: ProjectsDataProps[] = await projectRes.json();

  const teamRes = await fetch(`http://localhost:5001/ourTeam?q=${search}`);
  const team: TeamDataProps[] = await teamRes.json();

  return {
    props: {
      dataProducts,
      projects,
      team,
    },
  };
};
